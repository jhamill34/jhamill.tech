---
import { SITE } from "../config.ts";
import { ViewTransitions } from "astro:transitions";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import "../styles/global.css";

interface Props {
    pageTitle?: string;
    description?: string;
    author?: string;
    ogImage?: string;
    canonicalURL?: string;
}

const { 
    pageTitle, 
    author = SITE.author, 
    description = SITE.desc, 
    ogImage = SITE.ogImage, 
    canonicalURL = new URL(Astro.url.pathname, Astro.site).href,
} = Astro.props;
---

<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" href="/favicon.ico" type="image/svg+xml">
        <meta name="generator" content={Astro.generator} />

        <title>{pageTitle}</title>
        <meta name="title" content={pageTitle} />
        <meta name="description" content={description} />
        <meta name="author" content={author} />
        <link rel="sitemap" href="/sitemap-index.xml" />


        <meta property="og:title" content={pageTitle} />
        <meta property="og:description" content={description} />
        <meta property="og:url" content={canonicalURL} />
        <meta property="og:image" content={ogImage} />

        <meta property="twitter:card" content="summary_large_image" />
        <meta property="twitter:url" content={canonicalURL} />
        <meta property="twitter:title" content={pageTitle} />
        <meta property="twitter:description" content={description} />
        <meta property="twitter:image" content={ogImage} />

        <ViewTransitions />
    </head>
    <body>
        <canvas id="my-canvas" width="300" height="300"></canvas>

        <Header />
        <main>
            {pageTitle && <h1>{pageTitle}</h1>}
            <slot />
        </main>
        <Footer />
    </body>
</html>

<script>
const canvas = document.getElementById("my-canvas") as HTMLCanvasElement;
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

window.addEventListener('resize', () => {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
});

if (canvas !== null) {
    const ctx = canvas.getContext("2d");
    if (ctx !== null) {
        ctx.fillStyle = "#123456";
        ctx.arc(300, 300, 50, 0, 360);
        ctx.fill();
    } 
}
</script>

